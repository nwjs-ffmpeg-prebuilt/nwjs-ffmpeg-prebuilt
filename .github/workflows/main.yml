name: CI

on:
  pull_request:
    branches: [master]
  release:
    types: [created]
  workflow_run:
    workflows: ["daily"]
    branches: [master]
    types: [completed]

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-22.04
    if: $ {{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'release' }}
    steps:
      - run: echo "FFmpeg version is not the latest. The build job will be triggered momentarily."
  build-win:
    needs: [check]
    runs-on: windows-2019
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/checkout@v3
      - name: Copy to C drive
        run: cp D:\a C:\ -Recurse
#      - name: Setup tmate session
#        uses: mxschmitt/action-tmate@v3
      - name: npm install, build and test
        working-directory: "C:/a/${{ github.event.repository.name }}/${{ github.event.repository.name }}"
        run: |
          pwd
          npm install
          node build --arch x64
          node build --arch ia32
      - name: Upload the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: win
          path: 'c:/a/**/build/out/*.zip'

  build-macos:
    needs: [check]
    runs-on: macos-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/checkout@v3
      - name: npm install, build and test
        run: |
          npm install
          node build
      - name: Upload the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mac
          path: 'build/out/*.zip'

  build-linux:
    needs: [check]
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/checkout@v3
      - name: disk space cleanup
        run: |
          sudo rm -rf /usr/local/lib/android # will release about 10 GB if you don't need Android
          sudo rm -rf /usr/share/dotnet # will release about 20GB if you don't need .NET
      - name: npm install, build and test
        run: |
          npm install
          node build --arch x64
          node build --arch ia32
      - name: Upload the artifacts
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: 'build/out/*.zip'

  build-release:
    needs: [build-win, build-macos, build-linux]
    name: "Build Release"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: win
          path: release/win
      - uses: actions/download-artifact@v3
        with:
          name: linux
          path: release/linux
      - uses: actions/download-artifact@v3
        with:
          name: mac
          path: release/mac

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: release/

      - name: Upload mac binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/mac/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

      - name: Upload linux binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/linux/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

      - name: Upload windows binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: release/win/nwjs-ffmpeg-prebuilt/nwjs-ffmpeg-prebuilt/build/out/*.zip
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true
