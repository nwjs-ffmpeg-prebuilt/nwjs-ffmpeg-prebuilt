name: CI

on:
  release:
    types: [ created ]
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number to build'
        required: true
        default: '0.101.2'
concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  is-latest:
    name: "Is Latest"
    runs-on: ubuntu-latest
    outputs:
      nw: ${{ steps.set_nw.outputs.nw }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Check if latest
        working-directory: .github/workflows
        run: bash ./is_latest.sh ${{ github.event_name }}
        env:
          GITHUB_EVENT_NAME: ${{ github.event_name }}
      - name: Write NW version to env and set output
        id: set_nw
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "nw=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            NW_VERSION=$(curl -s https://nwjs.io/versions.json | jq -r '.latest' | sed 's/v//')
            echo "nw=$NW_VERSION" >> $GITHUB_OUTPUT
          fi

  build-win-x64:
    needs: is-latest
    name: "Build for Windows on Ubuntu"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm ripgrep mingw-w64 llvm
      - name: Build
        working-directory: ${{ github.workspace }}
        run: |
          bash ./build-linux.sh ${{ needs.is-latest.outputs.nw }} win-x64
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: win-x64
          path: '/tmp/nwff/release/*.zip'

  build-win-ia32:
    needs: is-latest
    name: "Build for Windows-ia32 on Ubuntu"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm ripgrep mingw-w64 llvm
      - name: Build
        working-directory: ${{ github.workspace }}
        run: |
          bash ./build-linux.sh ${{ needs.is-latest.outputs.nw }} win-ia32
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: win-ia32
          path: '/tmp/nwff/release/*.zip'

  build-osx-x64:
    needs: is-latest
    name: "Build for macos-x64"
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup build tools
        run: |
          brew update
          # Use newer bash
          brew install nasm ripgrep bash llvm
      - name: Build
        working-directory: ${{ github.workspace }}
        run: |
          bash ./build-linux.sh ${{ needs.is-latest.outputs.nw }} osx-x64
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: osx-x64
          path: '/tmp/nwff/release/*.zip'

  build-osx-arm64:
    needs: is-latest
    name: "Build for macos-arm64"
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup build tools
        run: |
          brew update
          brew install nasm ripgrep bash llvm
      - name: Build
        working-directory: ${{ github.workspace }}
        run: |
          bash ./build-linux.sh ${{ needs.is-latest.outputs.nw }} osx-arm64
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: osx-arm64
          path: '/tmp/nwff/release/*.zip'

  build-linux-x64:
    needs: is-latest
    name: "Build for Linux-x64"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm ripgrep llvm
      - name: Build
        working-directory: ${{ github.workspace }}
        run: |
          bash ./build-linux.sh ${{ needs.is-latest.outputs.nw }} linux-x64
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: linux-x64
          path: '/tmp/nwff/release/*.zip'

  build-linux-ia32:
    needs: is-latest
    name: "Build for Linux-ia32"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.2.2
      - name: Setup build tools
        run: |
          sudo apt-get update
          sudo apt-get install -y nasm ripgrep gcc-multilib llvm
      - name: Build
        working-directory: ${{ github.workspace }}
        run: |
          bash ./build-linux.sh ${{ needs.is-latest.outputs.nw }} linux-ia32
      - name: Upload the artifacts
        uses: actions/upload-artifact@v4.6.2
        with:
          name: linux-ia32
          path: '/tmp/nwff/release/*.zip'

  build-release:
    needs: [ build-win-x64, build-win-ia32, build-osx-x64, build-osx-arm64, build-linux-x64, build-linux-ia32]
    name: "Build Release"
    runs-on: "ubuntu-latest"
    steps:
      - name: Get NWJS version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "NW=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            echo "NW=$(curl -s https://nwjs.io/versions | jq -r '.latest' | sed 's/v//')" >> $GITHUB_ENV
            #CHROMIUM=$(curl -s https://nwjs.io/versions.json | jq -r ".versions[] | select(.version==\"v$NW_VERSION\") | .components.chromium")
            #echo "Chromium=$CHROMIUM" >> $GITHUB_ENV
          fi

      - uses: actions/download-artifact@v4.3.0
        with:
          name: win-x64
          path: release/win-x64
      - uses: actions/download-artifact@v4.3.0
        with:
          name: win-ia32
          path: release/win-ia32
      - uses: actions/download-artifact@v4.3.0
        with:
          name: linux-x64
          path: release/linux-x64
      - uses: actions/download-artifact@v4.3.0
        with:
          name: linux-ia32
          path: release/linux-ia32
      - uses: actions/download-artifact@v4.3.0
        with:
          name: osx-x64
          path: release/osx-x64
      - uses: actions/download-artifact@v4.3.0
        with:
          name: osx-arm64
          path: release/osx-arm64

      - name: Display structure of downloaded files
        run: ls -R
        working-directory: release/

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release/osx-arm64/*.zip
            release/osx-x64/*.zip
            release/linux-x64/*.zip
            release/linux-ia32/*.zip
            release/win-x64/*.zip
            release/win-ia32/*.zip
          tag_name: ${{ env.NW }}
          #body: |
            #Chromium ${{ env.CHROMIUM}}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
